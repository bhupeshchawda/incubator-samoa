<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  SAMOA
  %%
  Copyright (C) 2014 - 2015 Apache Software Foundation
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- change this if you desire to use a different version of DataTorrent -->
    <apex.version>3.4.0-incubating-SNAPSHOT</apex.version>
    <apex.apppackage.classpath>lib/*.jar</apex.apppackage.classpath>
  </properties>

  <name>samoa-apex</name>
  <description>Apex bindings for SAMOA</description>

  <artifactId>samoa-apex</artifactId>
  <parent>
    <groupId>org.apache.samoa</groupId>
    <artifactId>samoa</artifactId>
    <version>0.4.0-incubating-SNAPSHOT</version>
  </parent>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>Datatorrent-Releases</id>
      <name>DataTorrent Release Repository</name>
      <url>https://www.datatorrent.com/maven/content/repositories/releases/</url>
    </repository>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <id>DataTorrent-Snapshots</id>
      <name>DataTorrent Early Access Program Snapshot Repository</name>
      <url>https://www.datatorrent.com/maven/content/repositories/snapshots/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>org.apache.samoa</groupId>
      <artifactId>samoa-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.samoa</groupId>
      <artifactId>samoa-test</artifactId>
      <type>test-jar</type>
      <classifier>test-jar-with-dependencies</classifier>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>${zookeeper.storm.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j-log4j12.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator-annotation-processor</artifactId>
      <version>4.1.0.Final</version>
    </dependency>
	<dependency>
	    <groupId>org.codehaus.jackson</groupId>
	    <artifactId>jackson-mapper-asl</artifactId>
	    <version>1.9.13</version>
	</dependency>
	<dependency>
		<groupId>org.apache.apex</groupId>
		<artifactId>apex-engine</artifactId>
		<version>3.4.0-incubating-SNAPSHOT</version>
	</dependency>
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.24.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.13</version>
        </dependency>
	    <dependency>
	      <groupId>jline</groupId>
	      <artifactId>jline</artifactId>
	      <version>2.11</version>
	    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Apex assembly -->

<!--  <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <configuration>
          <finalName>SAMOA-Apex-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <attach>false</attach>
          <outputDirectory>../target</outputDirectory>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifestEntries>
              <Bundle-Version>${parsedVersion.osgiVersion}</Bundle-Version>
              <Bundle-Description>${project.description}</Bundle-Description>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>DataTorrent</Implementation-Vendor>
              <Implementation-Vendor-Id>DT</Implementation-Vendor-Id>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin> 

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>-Xmx1G</argLine>
          <redirectTestOutputToFile>false</redirectTestOutputToFile>
        </configuration>
      </plugin> -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.7</source>
          <target>1.7</target>
          <debug>true</debug>
          <optimize>false</optimize>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>target/deps</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>app-package-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}-${project.version}-apexapp</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/assemble/appPackage.xml</descriptor>
              </descriptors>
              <archiverConfig>
                <defaultDirectoryMode>0755</defaultDirectoryMode>
              </archiverConfig>
              <archive>
                <manifestEntries>
                  <Class-Path>${apex.apppackage.classpath}</Class-Path>
                  <DT-Engine-Version>${apex.version}</DT-Engine-Version>
                  <DT-App-Package-Name>${project.artifactId}</DT-App-Package-Name>
                  <DT-App-Package-Version>${project.version}</DT-App-Package-Version>
                  <DT-App-Package-Display-Name>${project.name}</DT-App-Package-Display-Name>
                  <DT-App-Package-Description>${project.description}</DT-App-Package-Description>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <target>
                <move file="${project.build.directory}/${project.artifactId}-${project.version}-apexapp.jar"
                      tofile="${project.build.directory}/${project.artifactId}-${project.version}.apa" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <!-- create resource directory for xml javadoc-->
            <id>createJavadocDirectory</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <delete dir="${project.build.directory}/generated-resources/xml-javadoc"/>
                <mkdir dir="${project.build.directory}/generated-resources/xml-javadoc"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>target/${project.artifactId}-${project.version}.apa</file>
                  <type>apa</type>
                </artifact>
              </artifacts>
              <skipAttach>false</skipAttach>
            </configuration>
          </execution>
        </executions>
      </plugin>


    </plugins>

   <testResources>
      <testResource>
	<directory>${project.basedir}/../bin</directory>
	<includes>
	<!--  <include>*storm.properties</include> -->
	</includes>
      </testResource>
   </testResources>

  </build>
</project>
